{"version":3,"sources":["modals/Carousel/Carousel.js","modals/NavBar/NavBar.js","modals/Card/Card.js","modals/Cards/Cards.js","modals/iframe/iframe.js","modals/Map/Map.js","modals/Maps/Maps.js","modals/App/App.js","serviceWorker.js","index.js"],"names":["items","id","altText","caption","src","Example","props","useState","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","slides","map","item","CarouselItem","className","tag","onExiting","onExited","CarouselCaption","captionText","captionHeader","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","NavBarExample","collapsed","setCollapsed","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","CardExample","Card","CardImg","this","detail","alt","CardBody","CardLink","CardTitle","title","React","Component","CardsList","CardGroup","cardDetails","iframe","height","width","allow","mapStyles","position","CurrentLocation","initialCenter","lat","lng","state","currentLocation","google","maps","mapRef","refs","node","ReactDOM","findDOMNode","zoom","center","LatLng","mapConfig","Object","assign","Map","prevProps","prevState","loadMap","recenterMap","current","panTo","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","setState","latitude","longitude","children","Children","c","cloneElement","mapCenter","style","ref","renderChildren","defaultProps","visible","MapContainer","showingInfoWindow","activeMarker","hp","selectedPlace","onMarkerClick","marker","e","onClose","name","GoogleApiWrapper","apiKey","App","frameborder","scrolling","NavBar","Cards","Maps","Boolean","window","location","hostname","match","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qYAWMA,G,MAAQ,CACZ,CACEC,GAAI,EACJC,QAAS,UACTC,QAAS,UACTC,IAAK,aAGP,CACEH,GAAI,EACJC,QAAS,UACTC,QAAS,UACTC,IAAM,gBAER,CACEH,GAAI,EACJC,QAAS,UACTC,QAAS,UACTC,IAAK,eAiEMC,EA7DC,SAACC,GAAW,IAAD,EACaC,mBAAS,GADtB,mBAClBC,EADkB,KACLC,EADK,OAESF,oBAAS,GAFlB,mBAElBG,EAFkB,KAEPC,EAFO,KAInBC,EAAO,WACX,IAAIF,EAAJ,CACA,IAAMG,EAAYL,IAAgBR,EAAMc,OAAS,EAAI,EAAIN,EAAc,EACvEC,EAAeI,KAGXE,EAAW,WACf,IAAIL,EAAJ,CACA,IAAMG,EAA4B,IAAhBL,EAAoBR,EAAMc,OAAS,EAAIN,EAAc,EACvEC,EAAeI,KAQXG,EAAShB,EAAMiB,KAAI,SAACC,GACxB,OACE,kBAACC,EAAA,EAAD,CACEC,UAAU,aACVC,IAAI,MACJjB,IAAOc,EAAKd,IACZkB,UAAW,kBAAMX,GAAa,IAC9BY,SAAU,kBAAMZ,GAAa,KAE7B,yBAAKS,UAAY,gBAAgBhB,IAAOc,EAAKd,MAC7C,kBAACoB,EAAA,EAAD,CAAiBJ,UAAU,cAAcK,YAAaP,EAAKf,QAASuB,cAAeR,EAAKf,cAK9F,OACE,6BACE,+JASA,kBAACwB,EAAA,EAAD,CACEnB,YAAaA,EACbI,KAAMA,EACNG,SAAUA,GAEV,kBAACa,EAAA,EAAD,CAAoB5B,MAAOA,EAAOQ,YAAaA,EAAaqB,eApChD,SAACC,GACbpB,GACJD,EAAeqB,MAmCVd,EACD,kBAACe,EAAA,EAAD,CAAiBC,UAAU,OAAOC,cAAc,WAAWJ,eAAgBd,IAC3E,kBAACgB,EAAA,EAAD,CAAiBC,UAAU,OAAOC,cAAc,OAAOJ,eAAgBjB,O,wDCrDhEsB,EA/BO,SAAC5B,GAAW,IAAD,EACIC,oBAAS,GADb,mBACvB4B,EADuB,KACZC,EADY,KAK7B,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAS,MACjC,kBAACC,EAAA,EAAD,CAAaC,KAAM,IAAItB,UAAU,UAAjC,cACA,kBAACuB,EAAA,EAAD,CAAeC,QANL,WAAOR,GAAcD,IAMQf,UAAW,SAClD,kBAACyB,EAAA,EAAD,CAAUC,QAAUX,EAAWY,QAAM,GACjC,kBAACC,EAAA,EAAD,CAAKD,QAAM,GACP,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASR,KAAO,KAAhB,sBAEJ,kBAACO,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASR,KAAO,KAAhB,eAEJ,kBAACO,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASR,KAAO,KAAhB,2BAEJ,kBAACO,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASR,KAAO,KAAhB,iB,gDCRbS,E,uKAZT,OACE,kBAACC,EAAA,EAAD,CAAMhC,UAAY,uBACd,kBAACiC,EAAA,EAAD,CAAUjC,UAAY,YAAYhB,IAAOkD,KAAKhD,MAAMiD,OAAOnD,IAAKoD,IAAOF,KAAKhD,MAAMiD,OAAOC,MACzF,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUhB,KAAO,iBACjB,kBAACiB,EAAA,EAAD,CAAWjB,KAAO,KAAKtB,UAAY,aAAakC,KAAKhD,MAAMiD,OAAOK,a,GAPxDC,IAAMC,W,QCmBjBC,G,6KAhBT,OACE,6BACA,kBAACC,EAAA,EAAD,CAAW5C,UAAY,SAEnBkC,KAAKhD,MAAM2D,YAAYhD,KAAI,SAAAsC,GACzB,OAAO,kBAAC,EAAD,CAAanC,UAAW,QAAQmC,OAAQA,a,GAPrCM,IAAMC,YCWbA,E,uKAXX,OACE,6BACE,4BAAQ1D,IAAKkD,KAAKhD,MAAM4D,OAAO9D,IAAK+D,OAAQb,KAAKhD,MAAM4D,OAAOC,OAAQC,MAAOd,KAAKhD,MAAM4D,OAAOE,MAAOC,MAAQf,KAAKhD,MAAM4D,OAAOG,a,GALlHR,IAAMC,W,QCAxBQ,EACC,CACHC,SAAU,WACVH,MAAO,OACPD,OAAQ,QAGCK,EAAb,kDA8BI,WAAYlE,GAAQ,IAAD,6BACf,cAAMA,IAEoBA,MAAMmE,cAAxBC,EAHO,EAGPA,IAAKC,EAHE,EAGFA,IAHE,OAKf,EAAKC,MAAQ,CACXC,gBAAiB,CACfH,IAAKA,EACLC,IAAKA,IARM,EA9BvB,sDAGQ,GAAIrB,KAAKhD,OAASgD,KAAKhD,MAAMwE,OAAQ,KAG7BC,EADazB,KAAKhD,MAAhBwE,OACYC,KAEdC,EAAS1B,KAAK2B,KAAKhE,IAGnBiE,EAAOC,IAASC,YAAYJ,GAE5BK,EAAS/B,KAAKhD,MAAd+E,KAV6B,EAWd/B,KAAKsB,MAAMC,gBAAxBH,EAX2B,EAW3BA,IAAKC,EAXsB,EAWtBA,IACPW,EAAS,IAAIP,EAAKQ,OAAOb,EAAKC,GAE9Ba,EAAYC,OAAOC,OACvB,GACA,CACEJ,OAAQA,EACRD,KAAMA,IAKV/B,KAAKrC,IAAM,IAAI8D,EAAKY,IAAIT,EAAMM,QA1BxC,wDA2CuBI,EAAWC,GACtBD,EAAUd,SAAWxB,KAAKhD,MAAMwE,QAClCxB,KAAKwC,UAEHD,EAAUhB,kBAAoBvB,KAAKsB,MAAMC,iBAC3CvB,KAAKyC,gBAhDf,oCAqDQ,IAAM9E,EAAMqC,KAAKrC,IACX+E,EAAU1C,KAAKsB,MAAMC,gBAErBE,EADSzB,KAAKhD,MAAMwE,OACNC,KAEpB,GAAI9D,EAAK,CACP,IAAIqE,EAAS,IAAIP,EAAKQ,OAAOS,EAAQtB,IAAKsB,EAAQrB,KAClD1D,EAAIgF,MAAMX,MA5DpB,0CA+D2B,IAAD,OACdhC,KAAKhD,MAAM4F,6BACTC,WAAaA,UAAUC,aACzBD,UAAUC,YAAYC,oBAAmB,SAAAC,GACvC,IAAMC,EAASD,EAAIC,OACnB,EAAKC,SAAS,CACZ3B,gBAAiB,CACfH,IAAK6B,EAAOE,SACZ9B,IAAK4B,EAAOG,gBAMtBpD,KAAKwC,YA7Eb,uCA+EwB,IAAD,OACPa,EAAarD,KAAKhD,MAAlBqG,SAER,GAAKA,EAEL,OAAO9C,IAAM+C,SAAS3F,IAAI0F,GAAU,SAAAE,GAClC,GAAKA,EAEL,OAAOhD,IAAMiD,aAAaD,EAAG,CAC3B5F,IAAK,EAAKA,IACV6D,OAAQ,EAAKxE,MAAMwE,OACnBiC,UAAW,EAAKnC,MAAMC,uBA1FlC,+BAgGQ,IAAMmC,EAAQvB,OAAOC,OAAO,GAAIpB,GAEhC,OACE,6BACE,yBAAK0C,MAAOA,EAAOC,IAAI,OAAvB,kBAGC3D,KAAK4D,sBAvGlB,GAAqCrD,IAAMC,WA6G3CU,EAAgB2C,aAAe,CAC3B9B,KAAM,GACNZ,cAAe,CACbC,KAAM,OACNC,IAAK,SAEPuB,6BAA6B,EAC7BkB,SAAS,GAIE5C,QCxHF6C,EAAb,4MACIzC,MAAQ,CACJ0C,mBAAmB,EACnBC,aAAc,CAACC,GAAI,oBACnBC,cAAe,IAJvB,EAOMC,cAAgB,SAACpH,EAAOqH,EAAQC,GAAhB,OAChB,EAAKpB,SAAS,CACZiB,cAAenH,EACfiH,aAAcI,EACdL,mBAAmB,KAX3B,EAcIO,QAAU,SAAAvH,GACJ,EAAKsE,MAAM0C,mBACb,EAAKd,SAAS,CACZc,mBAAmB,EACnBC,aAAc,QAlBxB,uDAwBI,OACI,kBAAC,EAAD,CACArB,6BAA2B,EAC3BpB,OAAQxB,KAAKhD,MAAMwE,QAEnB,kBAAC,SAAD,CAAQlC,QAASU,KAAKoE,cAAeI,KAAM,qBAC3C,kBAAC,aAAD,CAAYH,OAAQrE,KAAKsB,MAAM2C,aAAcH,QAAS9D,KAAKsB,MAAM0C,kBAAmBO,QAASvE,KAAKuE,SAChG,6BACE,4BAAKvE,KAAKsB,MAAM6C,cAAcK,QAGlC,kBAAC,SAAD,CAAQlF,QAASU,KAAKoE,cAAeI,KAAM,qBAC3C,kBAAC,aAAD,CAAYH,OAAQrE,KAAKsB,MAAM2C,aAAaC,GAAIJ,QAAS9D,KAAKsB,MAAM0C,kBAAmBO,QAASvE,KAAKuE,SACnG,6BACE,4BAAKvE,KAAKsB,MAAM6C,cAAcK,aAtC1C,GAAkChE,aA8CnBiE,8BACX,SAACzH,GAAD,MAAY,CACV0H,OAAQ1H,EAAM0H,UAFLD,CAIVV,GCzBUY,E,kDAzBb,WAAY3H,GAAO,IAAD,8BAChB,cAAMA,IAIDsE,MAAQ,CACXX,YAAc,CAAC,CAAC7D,IAAK,YAAaoD,IAAM,IAAKI,MAAQ,QAAS,CAACxD,IAAM,cAAeoD,IAAM,IAAKI,MAAQ,UAAY,CAACxD,IAAM,YAAaoD,IAAM,IAAKI,MAAQ,SAC1JM,OAAS,CAAC9D,IAAK,iFAAkFiE,MAAO,cAAgB6D,YAAY,IAAKC,UAAU,KAAM/D,MAAQ,OAAQD,OAAS,UAPpK,E,qDAahB,OACE,yBAAK/C,UAAY,OACf,kBAACgH,EAAD,MACA,kBAAC,EAAD,MACA,kBAACC,EAAD,CAAWpE,YAAeX,KAAKsB,MAAMX,cACrC,kBAAC,EAAD,CAAWC,OAAUZ,KAAKsB,MAAMV,SAChC,kBAACoE,EAAD,W,GApBUzE,IAAMC,WCIJyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNxD,IAASyD,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmB5C,WACrBA,UAAU6C,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.22e9861e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption\r\n} from 'reactstrap';\r\n\r\nimport \"./Carousel.css\";\r\n\r\nconst items = [\r\n  {\r\n    id: 1,\r\n    altText: 'Slide 1',\r\n    caption: 'Slide 1',\r\n    src: \"/beds.jpg\"\r\n\r\n  },\r\n  {\r\n    id: 2,\r\n    altText: 'Slide 2',\r\n    caption: 'Slide 2',\r\n    src : \"/banner1.jpg\"\r\n  },\r\n  {\r\n    id: 3,\r\n    altText: 'Slide 3',\r\n    caption: 'Slide 3',\r\n    src: \"/maps.png\"\r\n  }\r\n];\r\n\r\nconst Example = (props) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  }\r\n\r\n  const slides = items.map((item) => {\r\n    return (\r\n      <CarouselItem\r\n        className=\"custom-tag\"\r\n        tag=\"div\"\r\n        src = {item.src}\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n      >\r\n        <img className = \"imageCarousel\" src = {item.src} />\r\n        <CarouselCaption className=\"text-danger\" captionText={item.caption} captionHeader={item.caption} />\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <style>\r\n        {\r\n          `.custom-tag {\r\n              max-width: 100%;\r\n              height: 500px;\r\n              background: black;\r\n            }`\r\n        }\r\n      </style>\r\n      <Carousel\r\n        activeIndex={activeIndex}\r\n        next={next}\r\n        previous={previous}\r\n      >\r\n        <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n        {slides}\r\n        <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n        <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;\r\n","\r\nimport React, {useState} from 'react';\r\nimport {Navbar,NavbarBrand , NavbarToggler, Collapse, Nav, NavLink, NavItem } from 'reactstrap';\r\n\r\nconst NavBarExample = (props) => {\r\n    const[collapsed, setCollapsed] = useState(true)\r\n\r\n    const toggleNavBar =  () => {setCollapsed(!collapsed)}\r\n\r\n    return (\r\n        <div>\r\n            <Navbar color=\"faded\" light expand = \"md\">\r\n                <NavbarBrand href =\"/\" className=\"header\">Coronataka</NavbarBrand>\r\n                <NavbarToggler onClick ={toggleNavBar} className =\"mr-2\" />\r\n                <Collapse isOpen ={!collapsed} navbar>\r\n                    <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink href = \"/\" >Hospitals Near Me</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href = \"/\">Statistics</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href = \"/\">Current Covid-19 cases</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href = \"/\">Contact</NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default NavBarExample","import React from \"react\";\r\nimport \"./card.css\";\r\nimport { Card, CardImg, CardBody, CardTitle, CardLink } from \"reactstrap\";\r\n\r\nclass CardExample extends React.Component {\r\n    render() {\r\n      return (\r\n        <Card className = \"mr-3 mt-5 ml-3 card\">\r\n            <CardImg  className = \"cardImage\" src = {this.props.detail.src} alt = {this.props.detail.alt}/>\r\n            <CardBody>\r\n                <CardLink href = \"./coronataka\" />\r\n                <CardTitle href = \"./\" className = \"cardTitle\">{this.props.detail.title}</CardTitle>\r\n            </CardBody>\r\n        </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardExample;","import React from \"react\";\r\nimport CardExample from \"../Card/Card\"\r\nimport { CardGroup } from \"reactstrap\";\r\nimport \"./cards.css\";\r\n\r\nclass CardsList extends React.Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n        <CardGroup className = \"cards\">\r\n          {\r\n            this.props.cardDetails.map(detail => {\r\n              return <CardExample className= \"cards\" detail={detail} />\r\n            })\r\n          }\r\n        </CardGroup>\r\n      \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\nexport default CardsList","import React from 'react';\r\n\r\nclass Component extends React.Component\r\n{ \r\n     render() {\r\n      return (\r\n        <div>\r\n          <iframe src={this.props.iframe.src} height={this.props.iframe.height} width={this.props.iframe.width} allow ={this.props.iframe.allow}/>    \r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n  export default Component;","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nconst mapStyles = {\r\n  map: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n};\r\nexport class CurrentLocation extends React.Component {\r\n\r\n    loadMap() {\r\n        if (this.props && this.props.google) {\r\n          // checks if google is available\r\n          const { google } = this.props;\r\n          const maps = google.maps;\r\n    \r\n          const mapRef = this.refs.map;\r\n    \r\n          // reference to the actual DOM element\r\n          const node = ReactDOM.findDOMNode(mapRef);\r\n    \r\n          let { zoom } = this.props;\r\n          const { lat, lng } = this.state.currentLocation;\r\n          const center = new maps.LatLng(lat, lng);\r\n    \r\n          const mapConfig = Object.assign(\r\n            {},\r\n            {\r\n              center: center,\r\n              zoom: zoom\r\n            }\r\n          );\r\n    \r\n          // maps.Map() is constructor that instantiates the map\r\n          this.map = new maps.Map(node, mapConfig);\r\n        }\r\n      }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        const { lat, lng } = this.props.initialCenter;\r\n    \r\n        this.state = {\r\n          currentLocation: {\r\n            lat: lat,\r\n            lng: lng\r\n          }\r\n        };\r\n        \r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.google !== this.props.google) {\r\n          this.loadMap();\r\n        }\r\n        if (prevState.currentLocation !== this.state.currentLocation) {\r\n          this.recenterMap();\r\n        }\r\n      }\r\n\r\n      recenterMap() {\r\n        const map = this.map;\r\n        const current = this.state.currentLocation;\r\n        const google = this.props.google;\r\n        const maps = google.maps;\r\n    \r\n        if (map) {\r\n          let center = new maps.LatLng(current.lat, current.lng);\r\n          map.panTo(center);\r\n        }\r\n      }\r\n      componentDidMount() {\r\n        if (this.props.centerAroundCurrentLocation) {\r\n          if (navigator && navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(pos => {\r\n              const coords = pos.coords;\r\n              this.setState({\r\n                currentLocation: {\r\n                  lat: coords.latitude,\r\n                  lng: coords.longitude\r\n                }\r\n              });\r\n            });\r\n          }\r\n        }\r\n        this.loadMap();\r\n      }\r\n      renderChildren() {\r\n        const { children } = this.props;\r\n    \r\n        if (!children) return;\r\n    \r\n        return React.Children.map(children, c => {\r\n          if (!c) return;\r\n    \r\n          return React.cloneElement(c, {\r\n            map: this.map,\r\n            google: this.props.google,\r\n            mapCenter: this.state.currentLocation\r\n          });\r\n        });\r\n      }\r\n\r\n      render() {\r\n        const style = Object.assign({}, mapStyles.map);\r\n    \r\n        return (\r\n          <div>\r\n            <div style={style} ref=\"map\">\r\n              Loading map...\r\n            </div>\r\n            {this.renderChildren()}\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nCurrentLocation.defaultProps = {\r\n    zoom: 14,\r\n    initialCenter: {\r\n      lat: -1.2884,\r\n      lng: 36.8233\r\n    },\r\n    centerAroundCurrentLocation: false,\r\n    visible: true\r\n  };\r\n\r\n\r\nexport default CurrentLocation;","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\r\nimport CurrentLocation from \"../Map/Map\"\r\n\r\nconst mapStyles = {\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\nexport class MapContainer extends Component {\r\n    state = {\r\n        showingInfoWindow: false,  // Hides or shows the InfoWindow\r\n        activeMarker: {hp: \"Baptist Hospital\"},          // Shows the active marker upon click\r\n        selectedPlace: {}          // Shows the InfoWindow to the selected place upon a marker\r\n      };\r\n\r\n      onMarkerClick = (props, marker, e) =>\r\n      this.setState({\r\n        selectedPlace: props,\r\n        activeMarker: marker,\r\n        showingInfoWindow: true\r\n      });\r\n  \r\n    onClose = props => {\r\n      if (this.state.showingInfoWindow) {\r\n        this.setState({\r\n          showingInfoWindow: false,\r\n          activeMarker: null\r\n        });\r\n      }\r\n    };\r\n     \r\n  render() {\r\n    return (\r\n        <CurrentLocation\r\n        centerAroundCurrentLocation\r\n        google={this.props.google}\r\n      >\r\n        <Marker onClick={this.onMarkerClick} name={'Current Location'}/>\r\n        <InfoWindow marker={this.state.activeMarker} visible={this.state.showingInfoWindow} onClose={this.onClose}>\r\n          <div>\r\n            <h4>{this.state.selectedPlace.name}</h4>\r\n          </div>\r\n        </InfoWindow>\r\n        <Marker onClick={this.onMarkerClick} name={'Current Location'}/>\r\n        <InfoWindow marker={this.state.activeMarker.hp} visible={this.state.showingInfoWindow} onClose={this.onClose}>\r\n          <div>\r\n            <h4>{this.state.selectedPlace.name}</h4>\r\n          </div>\r\n        </InfoWindow>\r\n        </CurrentLocation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper(\r\n    (props) => ({\r\n      apiKey: props.apiKey\r\n    }\r\n  ))(MapContainer)","import React from 'react';\r\nimport './App.css';\r\nimport Example from '../Carousel/Carousel';\r\nimport NavBarExample from \"../NavBar/NavBar\";\r\nimport CardsList from \"../Cards/Cards\";\r\nimport Component from \"../iframe/iframe\";\r\nimport Maps from '../Maps/Maps';\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n\r\n\r\n    this.state = {\r\n      cardDetails : [{src: \"/maps.png\", alt : \"1\", title : \"Maps\"}, {src : \"/graphs.jpg\", alt : \"2\", title : \"Graphs\"},  {src : \"/beds.jpg\", alt : \"3\", title : \"Beds\"}],\r\n      iframe : {src: \"https://www.atlistmaps.com/map/198971f6-b520-435d-bdaf-bf83fb739538?share=true\", allow :\"geolocation\" , frameborder:\"0\", scrolling:\"no\", width : \"100%\", height : \"400px\" }\r\n    }\r\n  }\r\n\r\n  render()\r\n  {\r\n    return(\r\n      <div className = \"App\">\r\n        <NavBarExample />\r\n        <Example />\r\n        <CardsList cardDetails = {this.state.cardDetails} />\r\n        <Component iframe = {this.state.iframe}/>\r\n        <Maps />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './modals/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}